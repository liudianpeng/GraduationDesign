<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" 
	xmlns:jee="http://www.springframework.org/schema/jee" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd">
	<!-- 配置扫描注解类：封装了扫描@Resource注解的类和@Autowired注解的类shenbao shenbaoadmin 101.200.235.85:1433-->
	<context:annotation-config/>
	
	<!-- 配置链接数据库的配置信息 -->
	<bean id="mydataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://localhost:3306/simulation_laboratory" />
		<property name="username" value="root" />
		<property name="password" value="123456" />
	</bean>

	<!-- 配置mybatis自身的信息，都归spring管理，此处封装了SqlSessionFactoryBean -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 数据源的注入 -->
		<property name="dataSource" ref="mydataSource" />
		<!-- 配置此属性后，sql的配置文件的结果集中就不用写包名了，直接写类名即可 -->
		<property name="typeAliasesPackage" value="com.xkd.entity" />
		<!-- mybaits映射文件的配置，供spring管理 -->
		<property name="mapperLocations" value="classpath*:com/xkd/dao/*Mapper.xml" />
	</bean>
	<!-- 将持久层的接口交给spring管理 自动存放在容器中，取是尽管用默认命名方式获取对象即可-->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.xkd.dao" />
	</bean>
	<context:component-scan base-package="com.xkd.entity"/>
</beans>