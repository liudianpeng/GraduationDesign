<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="dao.HomeinformationMapper">
  <resultMap id="BaseResultMap" type="model.HomeinformationKey">
    <id column="project_no" jdbcType="INTEGER" property="projectNo" />
    <id column="email" jdbcType="VARCHAR" property="email" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="model.HomeinformationKey">
    delete from home_information
    where project_no = #{projectNo,jdbcType=INTEGER}
      and email = #{email,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="model.HomeinformationKey">
    insert into home_information (project_no, email)
    values (#{projectNo,jdbcType=INTEGER}, #{email,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="model.HomeinformationKey">
    insert into home_information
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="projectNo != null">
        project_no,
      </if>
      <if test="email != null">
        email,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="projectNo != null">
        #{projectNo,jdbcType=INTEGER},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <resultMap id="BaseResultMap" type="model.HomeinformationKey">
    <id column="project_no" jdbcType="INTEGER" property="projectNo" />
    <id column="email" jdbcType="VARCHAR" property="email" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    project_no, email
  </sql>
  <select id="selectByExample" parameterType="model.HomeinformationExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from home_information
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByPrimaryKey" parameterType="model.HomeinformationKey">
    delete from home_information
    where project_no = #{projectNo,jdbcType=INTEGER}
      and email = #{email,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="model.HomeinformationExample">
    delete from home_information
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="model.HomeinformationKey">
    insert into home_information (project_no, email)
    values (#{projectNo,jdbcType=INTEGER}, #{email,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="model.HomeinformationKey">
    insert into home_information
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="projectNo != null">
        project_no,
      </if>
      <if test="email != null">
        email,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="projectNo != null">
        #{projectNo,jdbcType=INTEGER},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="model.HomeinformationExample" resultType="java.lang.Long">
    select count(*) from home_information
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update home_information
    <set>
      <if test="record.projectNo != null">
        project_no = #{record.projectNo,jdbcType=INTEGER},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update home_information
    set project_no = #{record.projectNo,jdbcType=INTEGER},
      email = #{record.email,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <resultMap id="BaseResultMap" type="model.HomeinformationKey">
    <id column="project_no" jdbcType="INTEGER" property="projectNo" />
    <id column="email" jdbcType="VARCHAR" property="email" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="model.HomeinformationKey">
    delete from home_information
    where project_no = #{projectNo,jdbcType=INTEGER}
      and email = #{email,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="model.HomeinformationKey">
    insert into home_information (project_no, email)
    values (#{projectNo,jdbcType=INTEGER}, #{email,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="model.HomeinformationKey">
    insert into home_information
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="projectNo != null">
        project_no,
      </if>
      <if test="email != null">
        email,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="projectNo != null">
        #{projectNo,jdbcType=INTEGER},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
</mapper>